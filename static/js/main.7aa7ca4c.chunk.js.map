{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setQuery","weather","setWeather","search","e","key","console","log","className","style","backgroundImage","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"+NAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CACpCC,OAAQ,CACNC,EAAGL,EACHM,MAAO,SACPC,MAPU,sCAEY,uBAClBC,EADkB,EAClBA,KADkB,kBASnBA,GATmB,2CAAH,sD,MCmDVC,MAnDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAIPC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACC,UAAVc,EAAEC,IADO,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAGXK,EAAWL,GACXS,QAAQC,IAAI,OAAQV,GACpBG,EAAS,IALE,2CAAH,sDASZ,OACE,sBACEQ,UAAU,iBACVC,MAAO,CAAEC,gBAAiB,wBAF5B,UAIE,iDACA,uBACEC,KAAK,OACLH,UAAU,SACVI,YAAY,iBACZC,MAAOxB,EACPyB,SAAU,SAACV,GAAD,OAAOJ,EAASI,EAAEW,OAAOF,QACnCG,WAAYb,IAEbF,EAAQgB,MACP,sBAAKT,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOP,EAAQiB,OACf,8BAAMjB,EAAQkB,IAAIC,aAEpB,sBAAKZ,UAAU,YAAf,UACGa,KAAKC,MAAMrB,EAAQgB,KAAKM,MACzB,2CAEF,sBAAKf,UAAU,OAAf,UACE,qBACEA,UAAU,YACVgB,IAAG,4CAAuCvB,EAAQA,QAAQ,GAAGwB,KAA1D,WACHC,IAAKzB,EAAQA,QAAQ,GAAG0B,cAE1B,4BAAI1B,EAAQA,QAAQ,GAAG0B,wBC5CnCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7aa7ca4c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = \"https://api.openweathermap.org/data/2.5/weather\";\r\nconst API_KEY = \"f33a484cf794d08d0148764789aaba32\";\r\n\r\nexport const fetchWeather = async (query) => {\r\n  const { data } = await axios.get(URL, {\r\n    params: {\r\n      q: query,\r\n      units: \"metric\",\r\n      APPID: API_KEY,\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","import { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport \"./App.css\";\nconst bgImage = \"./images/bg.jpg\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      setWeather(data);\n      console.log(\"data\", data);\n      setQuery(\"\");\n    }\n  };\n\n  return (\n    <div\n      className=\"main-container\"\n      style={{ backgroundImage: \"url(\" + bgImage + \")\" }}\n    >\n      <h1>PWA WEATHER APP</h1>\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Search City...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyPress={search}\n      />\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup>{weather.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img\n              className=\"city-icon\"\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}